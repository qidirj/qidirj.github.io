<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>题解-P4103 [HEOI2014] 大工程</title>
      <link href="/2023/06/05/%E9%A2%98%E8%A7%A3-P4103-HEOI2014-%E5%A4%A7%E5%B7%A5%E7%A8%8B/"/>
      <url>/2023/06/05/%E9%A2%98%E8%A7%A3-P4103-HEOI2014-%E5%A4%A7%E5%B7%A5%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>$$\text{Obviously,} \dp_u &#x3D; \forall x, y\in \mathrm{sons}_u \operatorname{and} x\neq y, \\forall a \in \mathrm{subtree}_x, b\in \mathrm{subtree}<em>y, \operatorname{and} a, b\in \mathrm{key}, \\sum \operatorname{dis}(a, b) \+ \sum</em>{v \in \mathrm{sons}<em>u} dp_v + [u\in \mathrm{key}]\sum</em>{v \in \mathrm{subtree}_u, v\in \mathrm{key}} \operatorname{dis}(u, v), \\\text{What’s more, we have} \\operatorname{dis}(a, b) &#x3D; \mathrm{dep}_a + \mathrm{dep}<em>b - 2\mathrm{dep}</em>{\operatorname{lca}(a,b)}, \\text{Therefore, }\\forall a \in \mathrm{subtree}_x, b\in \mathrm{subtree}_y, \operatorname{and} a, b\in \mathrm{key}, \\operatorname{dis}(a, b) &#x3D; \mathrm{dep}_a + \mathrm{dep}<em>b - 2 \mathrm{dep}</em>{\operatorname{lca}(x, y)} &#x3D; \mathrm{dep}_a + \mathrm{dep}_b - 2 \mathrm{dep}<em>u, \\text{Let’s write it in a $\Sigma$ format: } \\begin{aligned}dp_u &amp; &#x3D; \sum</em>{v \in \mathrm{sons}<em>u} dp_v + [u\in \mathrm{key}]\sum</em>{v \in \mathrm{subtree}_u, v\in \mathrm{key}} (\mathrm{dep}_v - \mathrm{dep}<em>u) + \sum</em>{x, y\in \mathrm{sons}<em>u, x\neq y}~\sum</em>{a \in \mathrm{subtree}<em>x, a\in \mathrm{key}} ~ \sum</em>{b\in \mathrm{subtree}_y, b\in \mathrm{key}} (\mathrm{dep}_a + \mathrm{dep}_b - 2 \mathrm{dep}<em>u) \ &amp; &#x3D; \sum</em>{v \in \mathrm{sons}<em>u} dp_v + [u\in \mathrm{key}]\left(\sum</em>{v \in \mathrm{subtree}_u, v\in \mathrm{key}} \mathrm{dep}_v - \mathrm{cnt}_u\mathrm{dep}<em>u\right) + \sum</em>{x, y\in \mathrm{sons}<em>u, x\neq y}~\sum</em>{a \in \mathrm{subtree}_x, a\in \mathrm{key}}\mathrm{dep}_a\mathrm{cnt}_y - 2 \mathrm{dep}_u\mathrm{cnt}<em>y+\sum</em>{b\in \mathrm{subtree}_y, b\in \mathrm{key}} \mathrm{dep}_b \\end{aligned}\\text{Where $\mathrm{cnt}_u$ is the count of key nodes in the subtree of $u$.}\\text{Denote that $\mathrm{sum}<em>u$ is the sum of the depth of key nodes in the subtree of $u$, then we have}\\begin{aligned}dp_u &amp; &#x3D; \sum</em>{v \in \mathrm{sons}_u} dp_v + [u\in \mathrm{key}]\left(\mathrm{sum}_u - \mathrm{cnt}_u \mathrm{dep}<em>u\right) + \sum</em>{x, y\in \mathrm{sons}<em>u, x\neq y}~\sum</em>{a \in \mathrm{subtree}_x, a\in \mathrm{key}}\mathrm{dep}_a\mathrm{cnt}_y - 2 \mathrm{dep}_u\mathrm{cnt}_y+\mathrm{sum}<em>y \\end{aligned}\\text{But it’s still $O(n^3)$, quite slow. Note there are a lot useless $\Sigma$-s, how to remove them?}\\begin{aligned}dp_u &amp; &#x3D; \sum</em>{v \in \mathrm{sons}_u} dp_v + [u\in \mathrm{key}]\left(\mathrm{sum}_u - \mathrm{cnt}_u \mathrm{dep}<em>u\right) + \sum</em>{x, y\in \mathrm{sons}<em>u, x\neq y}~\sum</em>{a \in \mathrm{subtree}_x, a\in \mathrm{key}}\mathrm{dep}_a\mathrm{cnt}_y - 2 \mathrm{dep}_u\mathrm{cnt}_y+\mathrm{sum}<em>y \ &amp; &#x3D; \sum</em>{v \in \mathrm{sons}_u} dp_v + [u\in \mathrm{key}]\left(\mathrm{sum}_u - \mathrm{cnt}_u \mathrm{dep}<em>u\right) + \sum</em>{x, y\in \mathrm{sons}_u, x\neq y} \mathrm{cnt}_x(- 2 \mathrm{dep}_u\mathrm{cnt}_y+\mathrm{sum}<em>y) + \sum</em>{a \in \mathrm{subtree}_x, a\in \mathrm{key}}\mathrm{dep}_a\mathrm{cnt}<em>y \ &amp; &#x3D; \sum</em>{v \in \mathrm{sons}_u} dp_v + [u\in \mathrm{key}]\left(\mathrm{sum}_u - \mathrm{cnt}_u \mathrm{dep}<em>u\right) + \sum</em>{x, y\in \mathrm{sons}_u, x\neq y}\mathrm{sum}_y\mathrm{cnt}_x + \mathrm{sum}_x\mathrm{cnt}_y - 2 \mathrm{dep}_u\mathrm{cnt}_x\mathrm{cnt}<em>y \\end{aligned}\\text{The first two parts can be easily solved in $O(n)$ time complexity. To solve the third part, we could rearrange it: }\\begin{aligned}dp_u &amp; &#x3D; \sum</em>{v \in \mathrm{sons}_u} dp_v + [u\in \mathrm{key}]\left(\mathrm{sum}_u - \mathrm{cnt}_u \mathrm{dep}<em>u\right) + \sum</em>{x, y\in \mathrm{sons}_u, x\neq y}\mathrm{sum}_y\mathrm{cnt}_x + \mathrm{sum}_x\mathrm{cnt}_y - 2 \mathrm{dep}_u\mathrm{cnt}_x\mathrm{cnt}<em>y \ &amp; &#x3D; \sum</em>{v \in \mathrm{sons}_u} dp_v + [u\in \mathrm{key}]\left(\mathrm{sum}_u - \mathrm{cnt}_u \mathrm{dep}<em>u\right) + \sum</em>{x \in \mathrm{sons}<em>u}\sum</em>{y \in \mathrm{sons}_u} [x\neq y]~ \mathrm{sum}_x\mathrm{cnt}_y - \mathrm{dep}_u\mathrm{cnt}_x\mathrm{cnt}_y \\end{aligned}\\text{It seems to be much more clean. }\\text{Note we removed the $2$ before $\mathrm{dep}_u\mathrm{cnt}_x\mathrm{cnt}<em>y$,}\\text{that’s because for each unordered pair $(x, y)$, we calculated it twice as ordered pair $(x, y), (y, x).$}\\text{To move on, we should first remove $[x\neq y]$, which is annoying. We can just ignore it, and remove it’s contribution afterwards.}\\begin{aligned}dp_u &amp; &#x3D; \sum</em>{v \in \mathrm{sons}_u} dp_v + [u\in \mathrm{key}]\left(\mathrm{sum}_u - \mathrm{cnt}_u \mathrm{dep}<em>u\right) + \sum</em>{x \in \mathrm{sons}<em>u}\sum</em>{y \in \mathrm{sons}_u} \mathrm{sum}_x\mathrm{cnt}_y - \mathrm{dep}_u\mathrm{cnt}_x\mathrm{cnt}<em>y - \sum</em>{x \in \mathrm{sons}_u} \mathrm{sum}_x\mathrm{cnt}_x - \mathrm{dep}_u\mathrm{cnt}<em>x^2 \ &amp; &#x3D; \sum</em>{v \in \mathrm{sons}_u} dp_v + [u\in \mathrm{key}]\left(\mathrm{sum}_u - \mathrm{cnt}_u \mathrm{dep}<em>u\right) + \sum</em>{x \in \mathrm{sons}<em>u}\sum</em>{y \in \mathrm{sons}_u} (\mathrm{sum}_x - \mathrm{dep}_u\mathrm{cnt}_x)\mathrm{cnt}<em>y - \sum</em>{x \in \mathrm{sons}_u} \mathrm{sum}_x\mathrm{cnt}_x - \mathrm{dep}_u\mathrm{cnt}<em>x^2 \ &amp; &#x3D; \sum</em>{v \in \mathrm{sons}_u} dp_v + [u\in \mathrm{key}]\left(\mathrm{sum}_u - \mathrm{cnt}_u \mathrm{dep}<em>u\right) + \sum</em>{x \in \mathrm{sons}_u}(\mathrm{sum}_x - \mathrm{dep}_u\mathrm{cnt}<em>x)\sum</em>{y \in \mathrm{sons}_u} \mathrm{cnt}<em>y - \sum</em>{x \in \mathrm{sons}_u} \mathrm{sum}_x\mathrm{cnt}_x - \mathrm{dep}_u\mathrm{cnt}_x^2 \\end{aligned}\\text{These parts are all independent with each other. This means, we finally found a $O(n)$ solution!}\\tiny\text{Though I don’t know if it’s right or not \dots}\normalsize\\text{The second and third subtasks are rather easy. }\\text{For example, if we want to calculate the longest distance, }\\text{First define $\mathrm{deepest}<em>u$ as the deepest key node in the subtree of $u$, then: }\dp_u &#x3D; \max\left( \max\limits</em>{v\in \mathrm{sons}<em>u}dp_v, [u \in \mathrm{key}] ~ \mathrm{dep}</em>{\mathrm{deepest}_u} - \mathrm{dep}<em>u, \max\limits</em>{v\in \mathrm{sons}<em>u}\max\limits</em>{w\in \mathrm{sons}_u}\operatorname{dis}(\mathrm{deepest}_v,\mathrm{deepest}_w) \right)\\text{The last part can be solved by recording the deepest node so far.}\\text{Note: to calculate the shortest distance, more edge cases must be tested.}\$$</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Line 5</title>
      <link href="/2023/06/02/Line-5/"/>
      <url>/2023/06/02/Line-5/</url>
      
        <content type="html"><![CDATA[<p>Line 5: 96cc173eda5a2f64e8f99a07442aae4aca3d204d33b3812c0838f59f71f467d3</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>算法笔记 - t0x01 贪心</title>
      <link href="/2023/05/30/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0-t0x01-%E8%B4%AA%E5%BF%83/"/>
      <url>/2023/05/30/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0-t0x01-%E8%B4%AA%E5%BF%83/</url>
      
        <content type="html"><![CDATA[<h2 id="0x0110-贪心思想"><a href="#0x0110-贪心思想" class="headerlink" title="0x0110 贪心思想"></a>0x0110 贪心思想</h2><p>我觉得，我把草纸上的东西重新打一遍是一个很傻逼的事情。</p><h3 id="0x0111-引入"><a href="#0x0111-引入" class="headerlink" title="0x0111 引入"></a>0x0111 引入</h3><p>生活中，用到贪心的地方有很多。举一个例子：买菜的时候，我们一般会“货比三家”，选择性价比最高的。如果还没买够，这家店就卖光了（虽然这种情况一般不会发生），那么就去买性价比次高的，以此类推。抽象成代码即为：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">buy</span><span class="params">(<span class="type">int</span> need, <span class="type">int</span> money)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">sort</span>(stores, [](<span class="type">const</span> Store &amp;a, <span class="type">const</span> Store &amp;b)</span><br><span class="line">               &#123; <span class="keyword">return</span> <span class="number">1.0</span> * a.quality / a.cost &gt; <span class="number">1.0</span> * b.quality / b.cost; &#125;);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">auto</span> s : stores)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="type">int</span> bought = <span class="built_in">min</span>(&#123;s.count, money / s.cost, need&#125;);</span><br><span class="line">    s.<span class="built_in">buy</span>(bought);</span><br><span class="line">    money -= bought * s.cost;</span><br><span class="line">    need -= bought;</span><br><span class="line">    <span class="keyword">if</span> (need &lt;= <span class="number">0</span>)</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此例中，我们使用了“取最大值”的贪心思想。</p><h3 id="0x0112-常见思想"><a href="#0x0112-常见思想" class="headerlink" title="0x0112 常见思想"></a>0x0112 常见思想</h3><ul><li>取最大&#x2F;优值<br>如上。利用一些 DS 维护当前最大值，并每次取最大值。</li><li>取最远&#x2F;近点<br>包括一些区间贪心和一些计算几何题，比如最小区间覆盖。此类题一般要取能取的范围内最远或最近的点，本质上仍然是取最优值思想。</li><li>取代价最大&#x2F;小<br>若所有物品最终都必须选择，而选择物品的顺序会影响物品的花费（例如越晚选择花费越大），则可以考虑贪心地优先选花费增长快的物品。</li><li>权值计算<br>有时候取最大值的对象并不明确，可能需要推式子并化简。例题：保护花朵。</li></ul><h2 id="0x0120-适用范围"><a href="#0x0120-适用范围" class="headerlink" title="0x0120 适用范围"></a>0x0120 适用范围</h2><h3 id="0x0121-最优子结构"><a href="#0x0121-最优子结构" class="headerlink" title="0x0121 最优子结构"></a>0x0121 最优子结构</h3><p>能够使用贪心算法的问题一般都具有“最优子结构”。其含义为：问题能够分解成子问题来解决，子问题的最优解能递推到最终问题的最优解。（部分来源：OI-Wiki）</p><ul><li>问题能够分解成子问题来解决<br>例如，一个序列上的问题，可以先考虑这个序列的一个子段的答案，并扩展到整个区间。</li><li>子问题的最优解能递推到最终问题的最优解<br>如果一个子问题的最优解一定是全局最优解的一部分，就可以使用贪心。否则，可以考虑求出所有子问题的最优解，并选这些解中最优的扩展，本质上是动态规划的基本思想。</li></ul><h3 id="0x0122-常见证明方式"><a href="#0x0122-常见证明方式" class="headerlink" title="0x0122 常见证明方式"></a>0x0122 常见证明方式</h3><ul><li>反证法<br>如果交换方案中某两个元素不会使答案变得更好，则目前解已经是最优解了。不排除会有“局部最优解”出现，但如果问题具有“最优子结构”就没有这样的情况产生。</li><li>归纳法<br>由最小的子问题即“边界条件”一步步归纳，最终得出结论。</li></ul><h2 id="0x0130-常利用的-STL、算法与-DS"><a href="#0x0130-常利用的-STL、算法与-DS" class="headerlink" title="0x0130 常利用的 STL、算法与 DS"></a>0x0130 常利用的 STL、算法与 DS</h2><h3 id="0x0131-取最优"><a href="#0x0131-取最优" class="headerlink" title="0x0131 取最优"></a>0x0131 取最优</h3><p>贪心在选择最优解的过程中，如果不需要中途改动（最优解是静态的），则可以考虑先排序再取用。</p><p>一般常用 <code>std::sort(begin, end[, compare = less&lt;_Tp&gt;])</code> 排序，注意其不具有稳定性。为使 <code>sort</code> 排序具有稳定性，可以考虑将唯一编号与权值同时放入一个结构体，并以编号为第二关键字排序。另一种解决方案是 <code>std::stable_sort(begin, end[, compare = less&lt;_Tp&gt;])</code>，其在无多余栈空间时时间复杂度有可能退化为 $O(n \log^2 n)$。其余情况下，两个函数的时间复杂度均为 $O(n \log n)$。</p><p>如果有改动（最优解可能是动态的），则需要利用数据结构维护最大值，较简单的问题可以使用堆。</p><p>STL 中，有 <code>std::priority_queue&lt;_Tp&gt;</code> 这一包装好的容器，可以用于简便地实现堆。默认行为下，此容器是大根的。</p><h3 id="0x0132-维护区间修改与-x2F-或区间查询"><a href="#0x0132-维护区间修改与-x2F-或区间查询" class="headerlink" title="0x0132 维护区间修改与&#x2F;或区间查询"></a>0x0132 维护区间修改与&#x2F;或区间查询</h3><p>部分题目中，需要支持区间处理信息。</p><p>以下部分内容可在数据结构专题中详细学习。</p><h4 id="树状数组-Binary-Indexed-Tree"><a href="#树状数组-Binary-Indexed-Tree" class="headerlink" title="树状数组 Binary Indexed Tree"></a>树状数组 Binary Indexed Tree</h4><p>正常写法的树状数组，原生支持单点加、前缀求和。若调换修改和查询的写法，可以支持后缀求和。</p><p>树状数组一般只能支持具有可减性的操作。利用操作的可减性，可以通过前缀和得知区间和。</p><p>特别地，利用差分，可以实现区间修改、单点查询。</p><p>复杂度：$O(n \log n)-O(\log n)$</p><h4 id="线段树-SeGment-Tree"><a href="#线段树-SeGment-Tree" class="headerlink" title="线段树 SeGment Tree"></a>线段树 SeGment Tree</h4><p>其常数较树状数组大，但其结构决定了其可以解决更多区间问题，包括大部分具有可加性的问题。可以实现所有树状数组能做的操作。</p><p>复杂度：$O(n \log n)-O(\log n)$</p><h4 id="平衡树"><a href="#平衡树" class="headerlink" title="平衡树"></a>平衡树</h4><p>包括 Splay、Treap、FHQ-Treap、文艺平衡树 等等。平衡树一般用于解决与排名相关的问题。</p><p>复杂度：$O(n \log n)-O(\log n)$</p><h4 id="树套树"><a href="#树套树" class="headerlink" title="树套树"></a>树套树</h4><p>较常用的有树状数组套线段树、线段树套线段树、线段树套平衡树。由于树套树内节点较多，而用得到的相对少，所以树套树的所有线段树一般都动态开点。可以解决二维区间或动态区间排名等问题。</p><p>复杂度：$O(n \log n)-O(\log^2 n)$，视问题而有所不同。</p><h3 id="0x0133-树上贪心"><a href="#0x0133-树上贪心" class="headerlink" title="0x0133 树上贪心"></a>0x0133 树上贪心</h3><p>这部分包括一些较快的 LCA 求法，以及树链剖分、LCT、ETT 等较难数据结构。其中较简单的倍增 LCA、树链剖分在提高篇里就会讲到。</p><h2 id="0x0140-例题"><a href="#0x0140-例题" class="headerlink" title="0x0140 例题"></a>0x0140 例题</h2><p>提高篇的这几道题也没什么说的……</p><h3 id="0x0143-喷水装置"><a href="#0x0143-喷水装置" class="headerlink" title="0x0143 喷水装置"></a>0x0143 喷水装置</h3><p>涉及到了一点点计算几何。考虑一个喷水装置的喷水区间是可以用勾股定理求的，因此求一下。注意用 <code>double</code> 存储。<strong>特别地，当一个喷水装置无法覆盖到区间时，将其左右端点均设为其位置，或者直接忽略。</strong></p><h3 id="0x0149-家庭作业"><a href="#0x0149-家庭作业" class="headerlink" title="0x0149 家庭作业"></a>0x0149 家庭作业</h3><p>前置：E 智力大冲浪。</p><p>考虑 E 题的复杂度瓶颈在于枚举可选位置，这一步是 $O(n)$ 的，本题难以承受。</p><p>有两种做法，第一种是将 <code>vis</code> 用链表实现，这样可以 $O(1)$ 查找；第二种是利用 <code>bitset</code> 的小常数及其方法 <code>_Find_next</code> 查询，也可以卡过去，并且跑的很快。</p><h3 id="0x014a-钓鱼"><a href="#0x014a-钓鱼" class="headerlink" title="0x014a 钓鱼"></a>0x014a 钓鱼</h3><p>也可以考虑使用动态规划。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>闲话 - 20230524~20230608</title>
      <link href="/2023/05/29/%E9%97%B2%E8%AF%9D-20230524-20230608/"/>
      <url>/2023/05/29/%E9%97%B2%E8%AF%9D-20230524-20230608/</url>
      
        <content type="html"><![CDATA[<h2 id="闲话：2023-x2F-05-x2F-24-2023-x2F-06-x2F-08-89-104"><a href="#闲话：2023-x2F-05-x2F-24-2023-x2F-06-x2F-08-89-104" class="headerlink" title="闲话：2023&#x2F;05&#x2F;24~2023&#x2F;06&#x2F;08 +89~+104"></a>闲话：2023&#x2F;05&#x2F;24~2023&#x2F;06&#x2F;08 +89~+104</h2><ul><li>突然多出来的集训。二模当天，光老师跟我家长联系，让我去 dsfz 脱产。所以现在我又坐在机房开摆啦 &#x2F;cf whk 怎么办捏。</li><li>搬迁。由于一些原因，光让我搬来 B 层。然后发现电脑电源的变压器从下面拔不出来，从上面也拔不出来。后来大概是暴力出奇迹，也不知道 A 层的桌子坏没坏。</li><li>摆烂。感觉这一阵子好多时间都浪费在没有用的地方了。下次真应该录个屏看看我一天干了些什么。不如不来脱产。</li><li>闲话。有一小段时间是并没有写闲话的，其余时间如果上面没有就是写了精分。精分的东西觉得还是不应该放在博客上，因此没放。</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>闲话 - 20230429~20230523</title>
      <link href="/2023/05/29/%E9%97%B2%E8%AF%9D-20230429-20230523/"/>
      <url>/2023/05/29/%E9%97%B2%E8%AF%9D-20230429-20230523/</url>
      
        <content type="html"><![CDATA[<h2 id="闲话：2023-x2F-04-x2F-29-2023-x2F-05-x2F-01-64-66-五一集训-Day1-3"><a href="#闲话：2023-x2F-04-x2F-29-2023-x2F-05-x2F-01-64-66-五一集训-Day1-3" class="headerlink" title="闲话：2023&#x2F;04&#x2F;29~2023&#x2F;05&#x2F;01 +64~+66 五一集训 Day1~3"></a>闲话：2023&#x2F;04&#x2F;29~2023&#x2F;05&#x2F;01 +64~+66 五一集训 Day1~3</h2><ul><li>模拟赛。给 B 层出了一套模拟赛。除了一道假题以外满分 500，被 shy 杀穿了（450）。假题是在讲题的时候才发现的。</li></ul><h2 id="闲话：2023-x2F-05-x2F-02-2023-x2F-05-x2F-03-67-68-五一集训-Day4-5"><a href="#闲话：2023-x2F-05-x2F-02-2023-x2F-05-x2F-03-67-68-五一集训-Day4-5" class="headerlink" title="闲话：2023&#x2F;05&#x2F;02~2023&#x2F;05&#x2F;03 +67~+68 五一集训 Day4~5"></a>闲话：2023&#x2F;05&#x2F;02~2023&#x2F;05&#x2F;03 +67~+68 五一集训 Day4~5</h2><ul><li>U 盘。虽然总在这里倒垃圾（？）不太好，但是今天把 U 盘整理完了。看到一些古老的东西还是会很感叹。时间过得真快啊。</li><li>闲话。最近感觉并没有很多闲话想写，可能要把这几天的合到一起了。</li></ul><h2 id="游记：2023-x2F-05-x2F-04-69-清北营-Day-1"><a href="#游记：2023-x2F-05-x2F-04-69-清北营-Day-1" class="headerlink" title="游记：2023&#x2F;05&#x2F;04 +69 清北营 Day -1"></a>游记：2023&#x2F;05&#x2F;04 +69 清北营 Day -1</h2><p>后天就要考 thusc day1 了，但并不是很紧张。</p><p>肯的姬封矿刑期死，为我武士。</p><p>颓废日写工程题，真有你的。</p><p>写了 RP++ 然后收拾东西跑路了。昨天大概把该整理的都整理完了 &#x2F;kel</p><p>git push！</p><h2 id="游记：2023-x2F-05-x2F-18-2023-x2F-05-x2F-19-83-84-期中考试"><a href="#游记：2023-x2F-05-x2F-18-2023-x2F-05-x2F-19-83-84-期中考试" class="headerlink" title="游记：2023&#x2F;05&#x2F;18~2023&#x2F;05&#x2F;19 +83~+84 期中考试"></a>游记：2023&#x2F;05&#x2F;18~2023&#x2F;05&#x2F;19 +83~+84 期中考试</h2><p>同样没什么可说的。感觉仍然是寄掉了。</p><h2 id="游记：2023-x2F-05-x2F-23-88-地生二次模拟"><a href="#游记：2023-x2F-05-x2F-23-88-地生二次模拟" class="headerlink" title="游记：2023&#x2F;05&#x2F;23 +88 地生二次模拟"></a>游记：2023&#x2F;05&#x2F;23 +88 地生二次模拟</h2><p>好好好，地理答题卡没涂完。成功被机房同学骂死了。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>B 层模拟赛题解</title>
      <link href="/2023/05/01/B-%E5%B1%82%E6%A8%A1%E6%8B%9F%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
      <url>/2023/05/01/B-%E5%B1%82%E6%A8%A1%E6%8B%9F%E8%B5%9B%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="关于日记的某年某月某日的不知道该叫什么和哪天进行的-B-层模拟赛于是把这些全都塞进标题的这档子事-题解"><a href="#关于日记的某年某月某日的不知道该叫什么和哪天进行的-B-层模拟赛于是把这些全都塞进标题的这档子事-题解" class="headerlink" title="关于日记的某年某月某日的不知道该叫什么和哪天进行的 B 层模拟赛于是把这些全都塞进标题的这档子事 | 题解"></a>关于日记的某年某月某日的不知道该叫什么和哪天进行的 B 层模拟赛于是把这些全都塞进标题的这档子事 | 题解</h1><h3 id="A-日记和绝世好课"><a href="#A-日记和绝世好课" class="headerlink" title="A. 日记和绝世好课"></a>A. 日记和绝世好课</h3><h4 id="A1-题意简述"><a href="#A1-题意简述" class="headerlink" title="A1. 题意简述"></a>A1. 题意简述</h4><p>给定 $n, m, q, a_i, b_i, k_j, l_x, r_x(1\leq i\leq n, 1\leq j\leq m, 1\leq x\leq q)$，请对每个 $x$ 计算以下表达式的值：</p><p>$$\sum\limits_{i&#x3D;1}^{n}\sum\limits_{j&#x3D;l_x}^{r_x}a_i[b_i\geq k_j] \pmod{10^9+7}$$</p><h4 id="A2-部分分-20"><a href="#A2-部分分-20" class="headerlink" title="A2. 部分分 - 20"></a>A2. 部分分 - 20</h4><p>按题意模拟即可。时间复杂度：$O(nmq)$。</p><h4 id="A3-部分分-32-48"><a href="#A3-部分分-32-48" class="headerlink" title="A3. 部分分 - 32~48"></a>A3. 部分分 - 32~48</h4><p>如果我们对所有的 $i,j$ 计算出 $a_i[b_i\geq k_j]$ 的值，并求出二维前缀和，就可以在 $O(nm)-O(1)$ 的时间内求出答案。如果只求了一维前缀和，复杂度会变成 $O(nm)-O(m)$，可以得到 32 分。</p><h4 id="A4-题解"><a href="#A4-题解" class="headerlink" title="A4. 题解"></a>A4. 题解</h4><p>中间的部分分我真不知道怎么做。</p><p>考虑这个式子的含义。它的含义是，对于每一个学员 $i$，他的贡献是他的权值 $a_i$ 乘上在 $[l_x, r_x]$ 区间内的、他能切掉（$b_i\geq k_j$）的题的个数。但是显然，这样不太好做。能不能换一个处理方式？</p><p>对于一道题，哪些学员能与它产生贡献？能切掉它的学员。因此，我们将学员按水平 $b$ 排序，这样可以 $O(\log n)$ 地找到能与一道题产生贡献的所有学员。这些学员的贡献为他们的权值 $a$ 之和，于是先 $O(n)$ 处理出权值前缀和，就可以做到 $O(\log n + 1) &#x3D; O(\log n)$ 地计算贡献。</p><p>我们对每道题都这样计算一次，复杂度是 $O(m\log n)$ 的。这之后，询问就变成了查询 $[l_x, r_x]$ 范围内每道题的贡献和，可以套一层前缀和。</p><p>总的复杂度：$O(m\log n + q)$。为了卡掉询问带 $\log$ 的做法，迫不得已增加了 $q$ 的范围。</p><h3 id="B-日记和一车双端队列"><a href="#B-日记和一车双端队列" class="headerlink" title="B. 日记和一车双端队列"></a>B. 日记和一车双端队列</h3><h4 id="B1-题意简述"><a href="#B1-题意简述" class="headerlink" title="B1. 题意简述"></a>B1. 题意简述</h4><p>看起来像可持久化双端队列的题。有双端队列的基本操作，每次询问两个版本的共同元素的个数。</p><h4 id="B2-部分分-24"><a href="#B2-部分分-24" class="headerlink" title="B2. 部分分 - 24"></a>B2. 部分分 - 24</h4><p>考虑存储每个版本里每个数是否出现，时间和空间复杂度均为 $O(nW)$。每次询问需要枚举每个元素，时间复杂度为 $O(qW)$，大概能跑到 24pts，如果常数太大可能只有 16pts。</p><h4 id="B3-部分分-40"><a href="#B3-部分分-40" class="headerlink" title="B3. 部分分 - 40"></a>B3. 部分分 - 40</h4><p>发现询问相当于是把两个版本与一下再 <code>popcount</code>，因此可以 <code>bitset</code> 优化。其具有 $\frac{1}{64}$ 的时间常数和 $\frac{1}{8}$ 的空间常数，可以跑到 $5\times 10^4$，有 40 分。大概给了 O2 优化。</p><h4 id="B4-部分分-60"><a href="#B4-部分分-60" class="headerlink" title="B4. 部分分 - 60"></a>B4. 部分分 - 60</h4><p>这部分是 $k&#x3D;1$ 的情况。我们记一个数出现的版本为 $[l_i,r_i]$，由于一个数最多出现一次，出现的版本一定在一个区间内。这样，对询问 $[x,y]$ 有贡献的数就一定满足 $l_i\leq x\leq y\leq r_i$，可以二维偏序。</p><p>原题：CCPC2023 吉林站 I. Deque</p><h4 id="B5-题解"><a href="#B5-题解" class="headerlink" title="B5. 题解"></a>B5. 题解</h4><p>以上的做法可以对这个做法有所启发。一个数最多出现两次，也就是其出现的版本可能为两个区间 $[l_{1,i},r_{1,i}] \cup [l_{2,i},r_{2,i}]$。贡献条件可能为 $l_{1,i}\leq x\leq y\leq r_{1,i}$ 及其对称 $l_{2,i}\leq x\leq y\leq r_{2,i}$，也可能为 $l_{1,i}\leq x\leq r_{1,i}\leq l_{2,i}\leq y\leq r_{1,i}$。前两者都很好做，只要按以上的做法二维偏序即可。</p><p>用括号来表示一个数出现和删除的时刻，则贡献条件可以写作 <code>([])(), ()([]), ([)(])</code>。第三种情况如果我们查询 $x\leq r_{1,i}\leq l_{2,i}\leq y$ 的话会多算上 <code>[()()], [()(]), ([)()]</code> 这些情况，考虑把这三种处理掉——再查询这三种情况。</p><p>但是，查询 <code>[()(])</code> 或 <code>([)()]</code> 时还会查询到 <code>[()()]</code>。所以，我们可以记 <code>[()()]</code> 的个数为 $a$，<code>[()(])</code> 的个数为 $b$，<code>([)()]</code> 的个数为 $c$，<code>([)(])</code> 的个数为 $d$。</p><p>接下来就可以做偏序了。如果我们记四次偏序的结果分别为 <code>ans[1][i], ans[2][i], ans[3][i], ans[4][i]$</code>，则：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = ans[<span class="number">1</span>][i];</span><br><span class="line">b = ans[<span class="number">2</span>][i] - a;</span><br><span class="line">c = ans[<span class="number">3</span>][i] - a;</span><br><span class="line">d = ans[<span class="number">4</span>][i] - a - b - c;</span><br></pre></td></tr></table></figure><h3 id="C-日记和日记怪谈"><a href="#C-日记和日记怪谈" class="headerlink" title="C. 日记和日记怪谈"></a>C. 日记和日记怪谈</h3><h4 id="C1-题意简述"><a href="#C1-题意简述" class="headerlink" title="C1. 题意简述"></a>C1. 题意简述</h4><p>每步会走到当前节点子树内的随机节点，求不同的路径个数、走到 $n$ 的概率、期望的步数。</p><h4 id="C2-部分分-36"><a href="#C2-部分分-36" class="headerlink" title="C2. 部分分 - 36"></a>C2. 部分分 - 36</h4><p>数据太烂了，导致暴力放了 36 分。考虑枚举每种情况，并按概率进行贡献。</p><h4 id="C3-部分分-68a"><a href="#C3-部分分-68a" class="headerlink" title="C3. 部分分 - 68a"></a>C3. 部分分 - 68a</h4><p>如果你写出了转移式，但不知道如何线性求解，你能得到 68 分。</p><h4 id="C4-部分分-68b"><a href="#C4-部分分-68b" class="headerlink" title="C4. 部分分 - 68b"></a>C4. 部分分 - 68b</h4><p>如果你不会算期望步数，你能得到 68 分。</p><h4 id="C5-题解"><a href="#C5-题解" class="headerlink" title="C5. 题解"></a>C5. 题解</h4><p>第一个问题是很好做的，我们记 $f_i$ 为从 $i$ 出发的路径个数，则：</p><p>$$<br>f_i &#x3D; \begin{cases}<br>1 &amp; i\in \mathrm{leaf}\<br>\sum\limits_{j\in \mathrm{subtree}_i}f_j &amp; i\in \mathrm{leaf}\<br>\end{cases}<br>$$</p><p>第二个问题涉及到了概率。记 $g_i$ 为从 $i$ 出发的成功概率，则：</p><p>$$<br>g_i &#x3D; \begin{cases}<br>1 &amp; i&#x3D;n\<br>0 &amp; i\in \mathrm{leaf}, i\neq n\<br>\dfrac{\sum\limits_{j\in \mathrm{subtree}_i}g_j}{\mathrm{size}_i-1} &amp; i\in \mathrm{leaf}\<br>\end{cases}<br>$$</p><p>因为每个转移是等概率的，因此可以把每个转移的成功概率加起来，并除以转移个数。</p><p>最后是期望步数 $h_i$。这个转移与成功概率很类似：</p><p>$$<br>h_i &#x3D; \begin{cases}<br>0 &amp; i\in \mathrm{leaf}\<br>\dfrac{\sum\limits_{j\in \mathrm{subtree}_i}h_j}{\mathrm{size}_i-1} + 1 &amp; i\in \mathrm{leaf}\<br>\end{cases}<br>$$</p><p>先用一样的套路求出每个转移的期望步数的平均值，此时要将其 $+1$ 才能得到期望步数（因为这次转移需要一步）。</p><p>注意，这些转移里都需要求子树和，需要在维护 $f,g,h$ 的同时维护 $\sum f, \sum g, \sum h$。如果没有维护，复杂度会退化为 $O(n^2)$，只有 68 分。</p><h3 id="D-日记和三分图"><a href="#D-日记和三分图" class="headerlink" title="D. 日记和三分图"></a>D. 日记和三分图</h3><!-- #### D1. 题意简述日记按直觉定义了三分图，然后规定了三分图中 $|A|,|B|,|C|$ 及 $A\rightarrow B$ 边的数量，并让你求出合法的只包含一条链的三分图个数。#### D2. 部分分 - 12枚举每个点的归属，再枚举链上点的顺序。直接枚举的话很难拿到 $n=8$ 的分。#### D3. 部分分 - 20如果枚举每个点的归属时及时剪枝，可以拿到 $n=8$ 的分。#### D4. 转化题意题里的点带标号。为了更容易转化题意，能否让它不带标号？我们考虑先求出不带标号的方案数，再乘上合法的标号个数即为答案。通过题目给定条件，我们能够算出合法的标号个数有多少种吗？显然可以。因为有 $n$ 个点，$a$ 个点为 $A$ 类，所以方案数为 $P_n^a$。剩下 $(n-a)$ 个点，$b$ 个点为 $B$ 类，方案数为 $P_{n-a}^b$。最后 $c$ 个点均为 $C$ 类，方案数为 $P_c^c=c!$。将这三个数乘起来得到 $P_n^aP_{n-a}^bP_c^c$ 即为合法个数。接下来，要求不带标号的方案数。先转化一下题意，原题是在图上操作，但要求图是条链。已经没有标号，而只有分类了，那么我们可以将一种分类抽象为一种字符，继而将链转化为字符串。[此处应该有图，但日记太菜了，不会画]那么，这个字符串是只包含 `ABC` 的字符串，规定了其中每种字符的个数，及子串 `AB` 的个数。#### D5. 部分分 - 24转化了题意之后，再枚举每个字符，就变成 $O(n3^n)$ 的了。它并不能跑到 $n=15$。#### D6. 部分分 - 40如果枚举每个字符的时候也及时剪枝，就可以拿到 $n\leq 17$ 的分了。#### D7. 题解先将不好算的 `AB` 单独拎出来，考虑将其定义为新字符 `E`。则题意进一步转化为：规定每种字符的个数，求只包含 `ABCE` 的、不含子串 `AB` 的字符串个数。第一步，我们将 `BCE` 排好。注意此时已经没有“标号”了。`B` 的排列种数为 $C_{(b-e)+c+e}^{b-e}$，`C` 为 $C_{c+e}^c$。`E` 只能占剩下的位置，种数为 $1$。总的方案数为 $C_{(b-e)+c+e}^{b-e}C_{c+e}^c$。下一步，我们插入 `A` 字符。此时，已经有 $(b-e)$ 个 `B`，而这些位置前面不能插入 `A`（来满足后一个限制），因此根据插板法，方案数为 $C_{(a-e)+c+e}^{a-e}$。---把这一堆东西乘起来，得到答案为 $P_n^aP_{n-a}^bP_c^cC_{(b-e)+c+e}^{b-e}C_{c+e}^cC_{(a-e)+c+e}^{a-e}$。看起来很乱，但其实只需要算几个排列数和几个组合数。如果每次暴力计算是 $O(Tn)$ 的，难以承受。考虑模数是质数，可以预处理前 $O(n)$ 个自然数的阶乘和阶乘的逆元，来加快计算。这样，时间复杂度为 $O(n+T)$ 或 $O(n\log n + T)$，取决于实现。这是可以承受的了。$O(T)$ 部分常数较大（因为要计算 $6$ 次，每次计算都有多个乘法和取模），注意优化一下。中间的子任务是留给没有推出完整式子或者不会 $O(1)$ 组合数的选手的。 --><p>众所周知，这道题假掉了，所以这里的题解注释了。如果你真的想看，可以 F12 取消注释。</p><h3 id="E-日记和文化课"><a href="#E-日记和文化课" class="headerlink" title="E. 日记和文化课"></a>E. 日记和文化课</h3><h4 id="E1-题解"><a href="#E1-题解" class="headerlink" title="E1. 题解"></a>E1. 题解</h4><p>直接求。$\mathrm{ans} &#x3D; \sum\limits_{i&#x3D;1}^n a_ip_i$。</p><h3 id="F-日记和完美构造"><a href="#F-日记和完美构造" class="headerlink" title="F. 日记和完美构造"></a>F. 日记和完美构造</h3><h4 id="F1-题解"><a href="#F1-题解" class="headerlink" title="F1. 题解"></a>F1. 题解</h4><p>抛开那些形式化定义，插入一个数字使得整个数为 9 的倍数。插入什么数字是可以确定的，插入位置可以贪心：从高往低，如果当前位置能减小字典序，则当前位置一定最优；否则放到末尾一定最优。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>闲话 - 20230417~20230423</title>
      <link href="/2023/04/22/%E9%97%B2%E8%AF%9D-20230417-20230423/"/>
      <url>/2023/04/22/%E9%97%B2%E8%AF%9D-20230417-20230423/</url>
      
        <content type="html"><![CDATA[<h2 id="闲话：2023-x2F-04-x2F-17-2023-x2F-04-x2F-18-52-53-距离一模一周"><a href="#闲话：2023-x2F-04-x2F-17-2023-x2F-04-x2F-18-52-53-距离一模一周" class="headerlink" title="闲话：2023&#x2F;04&#x2F;17~2023&#x2F;04&#x2F;18 +52~+53 距离一模一周"></a>闲话：2023&#x2F;04&#x2F;17~2023&#x2F;04&#x2F;18 +52~+53 距离一模一周</h2><ul><li>关于地生。这两天本来是要主攻地生的，但是在学校太颓了，回来又不想碰文化课。一模之前的话，我认为还是卷一卷比较好。带了地理的复习资料，然而并没有背。地理课做了挺多好题，感觉复健的差不多了，接下来是查缺补漏的阶段。</li><li>体育课 a。三个班一起上，周一有 16 个逆天玩应摸鱼，导致剩下的人被罚了 16 圈。感觉除了这些人逆天，体育老师也挺逆天的。周二还是有一堆摸鱼的，然后走了大半节课，最后解散了几分钟。就是感觉自由活动的时候，如果没有纸笔什么的，觉得很空洞或者如何，就必须得手头有些东西，要么是作业，要么是日记啥的。</li><li>体育课 b。因为太空洞，在那骂体育老师。三观不对，但是这必须要骂！从 f**k you 说到各种奇怪的骂法，然后就说了一些 random things in English。最终得到的结论：My English ability in speaking is like a pupil of Grade 4. I’m too weak, and need a lot of practice.</li><li>逆天家长。晚上快睡觉的时候想卷会地生，不让我卷。早上醒早了，给我摁回去让我多睡会（然后迟到了）。逆天。</li><li>发癫语录。成功把发癫文化带到学校了。现在前后左右全都在“可爱喵”或者各种发癫。可是这个位置离讲台很近啊。</li></ul><h2 id="闲话：2023-x2F-04-x2F-19-2023-x2F-04-x2F-20-54-55-距离一模-5-天"><a href="#闲话：2023-x2F-04-x2F-19-2023-x2F-04-x2F-20-54-55-距离一模-5-天" class="headerlink" title="闲话：2023&#x2F;04&#x2F;19~2023&#x2F;04&#x2F;20 +54~+55 距离一模 5 天"></a>闲话：2023&#x2F;04&#x2F;19~2023&#x2F;04&#x2F;20 +54~+55 距离一模 5 天</h2><ul><li>劣质笔管。上课的时候给我断油。太垃圾啦！把另一个废笔的头拔出来接上，经过一系列（60 字）的磨合之后能用啦！请叫我专业嫁接人（？）</li><li>体育课 c。竹姐（体育老师）：五班队尾要是再整不明白，你们就一直走。巴不得呢。还是竹姐：后面的，跟上了！你猜我们为啥跟不上捏。感觉过于逆天了。</li><li>发癫语录。感觉学校的同学们对发癫文化过于接受了啊。wyn（♀）：cr 姐姐！（cr：♂）并没有把性别打反，所以觉得很逆天。但是 cr 姐姐可爱喵。后来不知道 wyn 说了什么，我：cr 要女装？逆天。cr 姐姐 &#x2F;se</li><li>魔怔语录。得知咩咩脱产了。地生去死，把地生放到初二的纯纯挠餐。文化课，狗都不学，我要脱产。I don’t care, I want OI! 一模&#x2F;dao 地生&#x2F;dao 日记&#x2F;dao qnmdwhk&#x2F;hsh</li><li>东哥语录。东哥&#x3D;gd&#x3D;数学老师&#x3D;班主任。东哥：你跟赫行比，你比不了时间，你只能比效率。很认可，但是咩咩效率太高了卷不动 &#x2F;lb</li><li>关于人类及非人记忆力低到什么程度。我：咩咩，3&#x2F;15 你跟谁了？咩咩：我补刀啊。什么记忆力水平啊。</li></ul><h2 id="闲话：2023-x2F-04-x2F-21-56-距离地生中考-70-天"><a href="#闲话：2023-x2F-04-x2F-21-56-距离地生中考-70-天" class="headerlink" title="闲话：2023&#x2F;04&#x2F;21 +56 距离地生中考 70 天"></a>闲话：2023&#x2F;04&#x2F;21 +56 距离地生中考 70 天</h2><ul><li>发癫语录。发现同学们都很不对劲，啥都知道。逆天。（数一数，日记在日记里写了几次“逆天”）（答案：10）</li><li>跟咩咩聊天的时候打到“8.5”，十分感慨。无数次写下“8.5”似乎使得我对它无感了。可是事实上是这样的吗？其实不是。语文知识的匮乏使得我并不能表达出自己的感情。多练。扯远了，就是感觉，时间过得很快。刚开始学 OI 的时候我似乎写的还是“6.3”。</li></ul><h2 id="闲话：2023-x2F-04-x2F-22-57-距离一模-3-天"><a href="#闲话：2023-x2F-04-x2F-22-57-距离一模-3-天" class="headerlink" title="闲话：2023&#x2F;04&#x2F;22 +57 距离一模 3 天"></a>闲话：2023&#x2F;04&#x2F;22 +57 距离一模 3 天</h2><ul><li>地生一模。完全不慌啊，虽然只剩 3 天了，但是 sdfz 该去还得去 &#x2F;cf</li><li>六道仙人。感觉太颓了，于是写了 6 道题。</li><li>发癫。咩咩太可爱了！但是推车怎么最近都不来喵 &#x2F;kel</li><li>杂。给洛浔讲了一下树套树，讲完发现树套树不是很难.jpg 争取五一之前写完！</li></ul><h2 id="闲话：2023-x2F-04-x2F-23-58-距离一模-2-天"><a href="#闲话：2023-x2F-04-x2F-23-58-距离一模-2-天" class="headerlink" title="闲话：2023&#x2F;04&#x2F;23 +58 距离一模 2 天"></a>闲话：2023&#x2F;04&#x2F;23 +58 距离一模 2 天</h2><ul><li>体育课 d。继续被竹姐骂。感觉每次体育课都有东西写。可是又有人偷窥，下次需要进行个加密了。Like this? Maybe I can use other languages. Smt like dis(I mean, abbrs) cld also be psb.（像这样？也许可以换一些语言。一些缩写大概也可以用。）</li><li>发癫。我要写日记！我不学这个破b文化课了！（事实上这段的原稿是用英语写的）但是 cr 太可爱啦！想草！看起来同学并不是很懂喵的含义啊。一点一点来（？）</li><li>地生一模。不知不觉，距离一模只剩两天了啊。祝我好运。</li><li>出题。想到了一道好题。一共有 7 道力！（注：咩咩认为这题是假的，之后再说吧）</li><li>关于博客。其实之前有很多流水账，并没有放到博客上。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> TLE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OI笔记 - STL - 浅谈 chrono 库在计时上的应用</title>
      <link href="/2023/04/22/OI%E7%AC%94%E8%AE%B0-STL-%E6%B5%85%E8%B0%88-chrono-%E5%BA%93%E5%9C%A8%E8%AE%A1%E6%97%B6%E4%B8%8A%E7%9A%84%E5%BA%94%E7%94%A8/"/>
      <url>/2023/04/22/OI%E7%AC%94%E8%AE%B0-STL-%E6%B5%85%E8%B0%88-chrono-%E5%BA%93%E5%9C%A8%E8%AE%A1%E6%97%B6%E4%B8%8A%E7%9A%84%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="前置"><a href="#前置" class="headerlink" title="前置"></a>前置</h2><p>C++ 标准：C++11</p><p>头文件：<code>&lt;chrono&gt;</code></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>namespace std::chrono</code> 中提供了三（两）种可用的时钟：<code>std::chrono::_V2::steady_clock</code>、<code>std::chrono::_V2::system_clock</code>、<code>std::chrono::_V2::high_resolution_clock</code>。</p><p>这之中，<code>steady_clock</code> 提供精度较高的稳定时钟，<code>system_clock</code> 提供精度更高但随系统时间变化的时钟。<code>high_resolution_clock</code> “表示实现提供的拥有最小计次周期的时钟；它可以是 <code>system_clock</code> 或 <code>steady_clock</code> 的别名，或第三个独立时钟。”（<a href="https://zh.cppreference.com/w/cpp/chrono/high_resolution_clock">来源</a>，有调整）</p><p>具体地，在 Intel(R) Core(TM) i5-9500T CPU @ 2.20GHz 的 CPU 环境下使用 Windows 10 Pro 21H2 操作系统的 g++ 11.2.0 编译出的 <code>steady_clock</code> 具有 <code>100 ns</code> 的精度，<code>system_clock</code> 具有 <code>1 ns</code> 的精度。[1]</p><p>本文主要讨论如何使用 <code>steady_clock</code> 实现计时。</p><p>[1] <code>g++ -v</code> 的输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Using built-in specs.</span><br><span class="line">COLLECT_GCC=E:\qidirj\RedPanda-Cpp\MinGW64\bin\g++.exe</span><br><span class="line">COLLECT_LTO_WRAPPER=E:/qidirj/RedPanda-Cpp/MinGW64/bin/../libexec/gcc/x86_64-w64-mingw32/11.2.0/lto-wrapper.exe</span><br><span class="line">Target: x86_64-w64-mingw32</span><br><span class="line">Configured with: ../../../src/gcc-11.2.0/configure --host=x86_64-w64-mingw32 --build=x86_64-w64-mingw32 --target=x86_64-w64-mingw32 --prefix=/mingw64 --with-sysroot=/d/a/mingw-builds/mingw-builds/buildroot/x86_64-1120-posix-seh-rt_v9-rev1/mingw64 --enable-host-shared --disable-multilib --enable-languages=c,c++,lto --enable-libstdcxx-time=yes --enable-threads=posix --enable-libgomp --enable-libatomic --enable-lto --enable-graphite --enable-checking=release --enable-fully-dynamic-string --enable-version-specific-runtime-libs --enable-libstdcxx-filesystem-ts=yes --disable-libstdcxx-pch --disable-libstdcxx-debug --enable-bootstrap --disable-rpath --disable-win32-registry --disable-nls --disable-werror --disable-symvers --with-gnu-as --with-gnu-ld --with-arch=nocona --with-tune=core2 --with-libiconv --with-system-zlib --with-gmp=/d/a/mingw-builds/mingw-builds/buildroot/prerequisites/x86_64-w64-mingw32-static --with-mpfr=/d/a/mingw-builds/mingw-builds/buildroot/prerequisites/x86_64-w64-mingw32-static --with-mpc=/d/a/mingw-builds/mingw-builds/buildroot/prerequisites/x86_64-w64-mingw32-static --with-isl=/d/a/mingw-builds/mingw-builds/buildroot/prerequisites/x86_64-w64-mingw32-static --with-pkgversion=&#x27;x86_64-posix-seh-rev1, Built by MinGW-W64 project&#x27; --with-bugurl=https://sourceforge.net/projects/mingw-w64 CFLAGS=&#x27;-O2 -pipe -fno-ident -I/d/a/mingw-builds/mingw-builds/buildroot/x86_64-1120-posix-seh-rt_v9-rev1/mingw64/opt/include -I/d/a/mingw-builds/mingw-builds/buildroot/prerequisites/x86_64-zlib-static/include -I/d/a/mingw-builds/mingw-builds/buildroot/prerequisites/x86_64-w64-mingw32-static/include&#x27; CXXFLAGS=&#x27;-O2 -pipe -fno-ident -I/d/a/mingw-builds/mingw-builds/buildroot/x86_64-1120-posix-seh-rt_v9-rev1/mingw64/opt/include -I/d/a/mingw-builds/mingw-builds/buildroot/prerequisites/x86_64-zlib-static/include -I/d/a/mingw-builds/mingw-builds/buildroot/prerequisites/x86_64-w64-mingw32-static/include&#x27; CPPFLAGS=&#x27; -I/d/a/mingw-builds/mingw-builds/buildroot/x86_64-1120-posix-seh-rt_v9-rev1/mingw64/opt/include -I/d/a/mingw-builds/mingw-builds/buildroot/prerequisites/x86_64-zlib-static/include -I/d/a/mingw-builds/mingw-builds/buildroot/prerequisites/x86_64-w64-mingw32-static/include&#x27; LDFLAGS=&#x27;-pipe -fno-ident -L/d/a/mingw-builds/mingw-builds/buildroot/x86_64-1120-posix-seh-rt_v9-rev1/mingw64/opt/lib -L/d/a/mingw-builds/mingw-builds/buildroot/prerequisites/x86_64-zlib-static/lib -L/d/a/mingw-builds/mingw-builds/buildroot/prerequisites/x86_64-w64-mingw32-static/lib &#x27; LD_FOR_TARGET=/d/a/mingw-builds/mingw-builds/buildroot/x86_64-1120-posix-seh-rt_v9-rev1/mingw64/bin/ld.exe --with-boot-ldflags=&#x27; -Wl,--disable-dynamicbase -static-libstdc++ -static-libgcc&#x27;</span><br><span class="line">Thread model: posix</span><br><span class="line">Supported LTO compression algorithms: zlib</span><br><span class="line">gcc version 11.2.0 (x86_64-posix-seh-rev1, Built by MinGW-W64 project)</span><br></pre></td></tr></table></figure><h2 id="原型"><a href="#原型" class="headerlink" title="原型"></a>原型</h2><h3 id="std-chrono-steady-clock"><a href="#std-chrono-steady-clock" class="headerlink" title="std::chrono::steady_clock"></a><code>std::chrono::steady_clock</code></h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">steady_clock</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">typedef</span> chrono::nanosecondsduration;</span><br><span class="line">  <span class="keyword">typedef</span> duration::reprep;</span><br><span class="line">  <span class="keyword">typedef</span> duration::periodperiod;</span><br><span class="line">  <span class="keyword">typedef</span> chrono::time_point&lt;steady_clock, duration&gt;time_point;</span><br><span class="line"></span><br><span class="line">  <span class="type">static</span> <span class="keyword">constexpr</span> <span class="type">bool</span> is_steady = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="type">static</span> time_point</span></span><br><span class="line"><span class="function">  <span class="title">now</span><span class="params">()</span> <span class="keyword">noexcept</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="std-chrono-time-point-cast"><a href="#std-chrono-time-point-cast" class="headerlink" title="std::chrono::time_point_cast"></a><code>std::chrono::time_point_cast</code></h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">template</span>&lt;<span class="keyword">typename</span> _ToDur, <span class="keyword">typename</span> _Clock, <span class="keyword">typename</span> _Dur&gt;</span><br><span class="line">     <span class="keyword">constexpr</span> <span class="keyword">typename</span> enable_if&lt;__is_duration&lt;_ToDur&gt;::value,</span><br><span class="line">   time_point&lt;_Clock, _ToDur&gt;&gt;::<span class="function">type</span></span><br><span class="line"><span class="function">     <span class="title">time_point_cast</span><span class="params">(<span class="type">const</span> time_point&lt;_Clock, _Dur&gt;&amp; <span class="type">__t</span>)</span></span></span><br><span class="line"><span class="function">     </span>&#123;</span><br><span class="line"><span class="keyword">typedef</span> time_point&lt;_Clock, _ToDur&gt;__time_point;</span><br><span class="line"><span class="keyword">return</span> __time_point(<span class="built_in">duration_cast</span>&lt;_ToDur&gt;(<span class="type">__t</span>.<span class="built_in">time_since_epoch</span>()));</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><h3 id="std-chrono-V2-steady-clock-time-point-time-since-epoch"><a href="#std-chrono-V2-steady-clock-time-point-time-since-epoch" class="headerlink" title="std::chrono::_V2::steady_clock::time_point::time_since_epoch()"></a><code>std::chrono::_V2::steady_clock::time_point::time_since_epoch()</code></h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">constexpr</span> duration</span></span><br><span class="line"><span class="function"><span class="title">time_since_epoch</span><span class="params">()</span> <span class="type">const</span></span></span><br><span class="line"><span class="function"></span>&#123; <span class="keyword">return</span> __d; &#125;</span><br></pre></td></tr></table></figure><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><h3 id="获取当前相对时间"><a href="#获取当前相对时间" class="headerlink" title="获取当前相对时间"></a>获取当前相对时间</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chrono::<span class="built_in">time_point_cast</span>&lt;chrono::nanoseconds&gt;(chrono::steady_clock::<span class="built_in">now</span>()).<span class="built_in">time_since_epoch</span>()</span><br></pre></td></tr></table></figure><p><code>chrono::steady_clock::now()</code> 获取相对于一定时间点的当前时间，这个时间点可能是系统启动的时间、UNIX 时间起点等等。</p><p>接着，利用 <code>chrono::time_point_cast&lt;chrono::nanoseconds&gt;()</code> 将这个时间转换为纳秒形式，用 <code>time_since_epoch</code> 获取到相对时间。</p><h3 id="求时间差"><a href="#求时间差" class="headerlink" title="求时间差"></a>求时间差</h3><p>以上的表达式返回 <code>std::chrono::_V2::steady_clock::duration</code> 类型，其有 <code>count()</code> 成员函数，返回时间的整型形式，一般为 <code>long long</code> 类型。这之后，可以利用两个 <code>duration</code> 的 <code>count</code> 之差算出时间差，注意单位为纳秒。</p><h3 id="实现计时"><a href="#实现计时" class="headerlink" title="实现计时"></a>实现计时</h3><p>保存一个 <code>std::chrono::_V2::steady_clock::duration start</code>，在开始时将当前时间传入 <code>start</code>，则在任何时刻可以作差取到时间。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CCPC2023 吉林站 - 游记</title>
      <link href="/2023/04/22/CCPC2023-%E5%90%89%E6%9E%97%E7%AB%99-%E6%B8%B8%E8%AE%B0/"/>
      <url>/2023/04/22/CCPC2023-%E5%90%89%E6%9E%97%E7%AB%99-%E6%B8%B8%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="CCPC-吉林站-游记"><a href="#CCPC-吉林站-游记" class="headerlink" title="CCPC 吉林站 游记"></a>CCPC 吉林站 游记</h2><p>队员：日记 推车 HMY</p><p>天气很不错。昨天晚上大致计划了一下流程，反正开场和封榜期必然是我的，中间让队友分了吧。</p><p>大约 7:55 到的校门。碰到了 HMY 家长并被送到了目的地。&#x2F;bx</p><p>接下来 20 分钟人就陆续来了。8:15 签了 rp++，顺便给推车签了一下。</p><p>推车出发晚，8:25 左右才到。简单商量了一下分配（三人一机），推车自己又签了个字，然后就去三楼等着了。</p><p>8:40 放进机房。发现甚至给了水和笔，那我为啥要带捏。acm 给东西给的好齐啊，甚至有三份纸质题面。CCF 快学习一下。</p><p>9:00 准时开考！读题是按在膜 3 意义下题号的余数分的，推车分了 1，我分了 2，HMY 分了 0。上来看到 B 是裸的二分答案，可惜手生，5min 才过去。最快的好像 1min 就过了，好闪！</p><p>读过大部分题之后，一共筛选出了 4 道签到题：B C E K，其中 C 是高精板子，K 是期望板子。K 没开 long long，吃了一发，11+20。这次可以用 python，所以随手写一发 C，16min 过了。E 看起来并不是那么板子了，需要预处理一点东西，然后取个前缀 max。仍然比较签到，是在 46min 的时候一发过的。</p><p>现在的时间是 09:46，刚刚过掉四题。接下来我们的计划是按顺序走一遍。HMY 在推 F，推车在推 A。</p><p>很快，推车给出了 A 的一个思路：逆序对个数 mod (k-1)。显然这不对，但我们以一发罚时的代价才确认。推车仍然在找新的结论。同时，HMY 也给出了 F 的题意与大致思路，在简单模拟之后我找到了一个 dp 转移式。可是，这个转移式会算重，并且没办法套用容斥。意识到这一点时大致是 11:20。大部分时间都用在了 A F 三题上。</p><p>推车放弃了 A，转战 G。同时，我选择从 H 开始依次读到 M（即最后一题）。H 是一道游戏题，数据范围略大，但同样有大量剪枝，可以暴搜。J 类似，看起来是暴力 $O(n^2 m^2)$ 的，但是 $n, m \leq 600$。暂时放一下。I 看起来是可持久化数据结构的题，直觉告诉我不会很难，因为此时已经有队伍切了。L M 相对前三题难得多，并没有考虑。</p><p>接下来的时间，我一直在接管电脑并写 H。大约 12:10 时基本完成，但是样例仍然跑不对，会得到一个错解。此时，我们发现 acm 赛场甚至管饭！CCF 学着点 &#x2F;fn</p><p>盯 H 代码的同时，简单吃了一点东西，推车在写 G 的一个 $O(nm)$ 做法，并且由于我记错数据范围认为这是正解，吃了一发 TLE。</p><p>封榜前最后 30min，大家都在尝试 A F G 三题，并没有任何进展，结论都是错的。</p><p>封榜后，抱着死马当活马医的思想，我将 J 题的暴力写了出来。在实现到一半的时候，我突然意识到可以用 bitset 优化！对时间复杂度的分析显示，优化后可以获得 $2^{-10}$ 的常数，且程序本身结构简单，也拥有小常数。我认为这是正解，并且提交后一发通过！当时感觉大致跟周六 CF 末尾切题差不多，就是很紧张，很激动（锤击桌子）。语文水平不好，难以表达当时的情感，已知的是旁边队估计有些生气。</p><p>此时离结束仍然有 30min 以上，H 题我选择牺牲一定时间，来对搜索结果进行二次检查（程序内的函数名也叫 check_again）。（加上这个检查前，样例已经能跑出正确结果，但提交会 WA）我认为是有一些地方写假了，但是比赛已经快要结束，无奈之下选择了提交这个半成品。没想到，这题同样也过了！（掀桌）</p><p>最后几分钟，摆了一下，收拾东西跑路。推车去后台把每道题的气球都拿了一个，真的好可爱！</p><p>出场前，推车认为我们应该统一口径，说我们只切了四题（封榜前的成绩）。我并不表示赞同，但是推车这么说了，那就听吧。毕竟推车才是真正的队长（？）我只是打的代码比较多而已。突然意识到，我们封榜前的成绩是 4(78+1&#x3D;98)，在四切里是排名最高的。这是因为我们前四题都是在 1h 内切掉的，虽然吃了一发罚时但仍然以速度取胜。</p><p>出场之后看到了其它队。感觉他们都并没有藏私，JJ 队切了 6 题但是罚时比我们长一点，猫猫队切了 5 题，雨羊队和喵喵队大概都是 4 题。再往上是学长们的两个队（最终成绩）：大爷队 9 切榜二，zkq 队 11 切榜一。强大的！</p><p>下午会有一个讲题。因为中午吃了饭所以并不是很急，就去听了，顺便继续跟推车贴贴。被洛浔抓了，拍了照片 &#x2F;lb 感觉好多题都是思维题啊，被诈骗了。还是要多加练习。关于题目的实际做法，可以参看附件：简要题解。</p><p>讲题之后就是激烈的滚榜环节了！咩咩似乎被推车骗到了，一直认为我们 4 切。滚榜的时候仔细看了一下，好像并没有很多队伍封榜后 2 切，但是 1 切真的很多。看到 5-&gt;6 的队伍感觉很慌。我们到 6 切的时候是 rk12，后来看到了一个 6-&gt;7 的，把我们反超了；还有一队是靠罚时反超的。所以我们的最终成绩是 6 切，rk14。JJ 队是 rk15，罚时比我们长 69min。</p><p>滚榜结束后，“各回各家，明天上课”。跟推车道了别，所以，下周六见！</p><h2 id="简要题解"><a href="#简要题解" class="headerlink" title="简要题解"></a>简要题解</h2><p>A：有一个关于奇偶性的结论。当 $k$ 为偶数时，每次操作会使得相对逆序对个数改变一个奇数，因此最终可以使得相对逆序对个数为 $0$；当 $k$ 为奇数时，每次操作只能使其改变一个偶数，因此当且仅当相对逆序对个数为偶数时有解，否则一定无解。证略。逆序对可以使用归并排序求，打归并排序耗费了我们较长的时间，需要练习。</p><p>B：二分答案即可。注意二分的左边界不能为负数，否则可能导致错误。</p><p>C：考虑贪心，先选择大的一定更优，因为我们想让更大的被倍增更多次。需要利用高精度，注意本场允许使用 python。听说猫猫队不会用 py，现场写高精。</p><p>D：纳什博弈，结论为 $n \in (3Z, 6Z]$ 时公平。题解给出了三种情况下的最优策略，并证明了 $n \leq 3Z$ 时 A 必胜，$n &gt; 6Z$ 时 B 胜率超过 $\frac{1}{2}$。并不是很理解后一种情况，同样可参考题解。</p><p>E：考虑预处理。定义一种颜色的权值为这种颜色两次相邻出现的距离最大值，若只出现一次计作 $n$。之后取一个前缀 max 即得到答案。</p><p>F：我们理解错了题意。只包含若干个环相当于说每个节点度数均为偶数。一系列推导后得到答案为 $2^{\frac{(n-1)(n-2)}{2}}$，比较震撼。</p><p>G：推车推出了正确的式子，“只”需要二项式反演简化公式，并使用分治 NTT 等阴间技巧计算。</p><p>H：注意输出格式中“the answer is <strong>unique</strong>”。这侧面说明了数据中 <code>.</code> 的个数不可能很多。另外，有以下情况可以特判并填充：<code>.00. .11. 0.0 1.1</code> 以及所有可“trivial”确定的情况（平凡情况）。特别注意一下第三个条件，可以二进制压缩并使用 vis 数组检查。</p><p>I：转换题意，则其变成一个二维偏序问题。可以考虑离线树状数组，也可以使用一些更强的数据结构，但不需要。赛时并没有想到这种转换方式，看到可持久化就跑路了。</p><p>J：朴素的暴力是 $O(n^2 m^2)$，但若我们定义工作区窗口的长宽分别为 $w,h$，则需要计算的次数至多为 $(n-w+1)(m-h+1)wh$，平衡一下可发现其具有 $\frac{1}{16}$ 的常数。继而，利用 bitset 优化得到另一个 $\frac{1}{64}$ 的常数，总常数为上面提到的 $2^{-10}$。事实上，因为发现不合法可以直接跳出，程序具有比此更小的常数，可以轻松 AC。题解提到了需要手写 bitset，但并不必要。</p><p>K：$\frac{(m+1)n}{2}$，向下取整。注意使用 <code>long long</code>，避免不必要的罚时。</p><p>L 是 SAM 题，M 大概可以 Trie 解决。这两题并不是很会。</p>]]></content>
      
      
      
        <tags>
            
            <tag> TLE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机房的同学们</title>
      <link href="/2023/03/25/%E6%9C%BA%E6%88%BF%E7%9A%84%E5%90%8C%E5%AD%A6%E4%BB%AC/"/>
      <url>/2023/03/25/%E6%9C%BA%E6%88%BF%E7%9A%84%E5%90%8C%E5%AD%A6%E4%BB%AC/</url>
      
        <content type="html"><![CDATA[<p>防盒加密。</p><p>8�|[�M&#x2F;���p��|ͅ����C�K�\p�%�%� �&#x2F;�&amp;�\tH�5{�m�%�5�d��GϏ����U��T”�e��h̯����G��mǩ����|��W������n���z”�\��zΟ����@���Av_�������@���O̯���%�6�ͱ�����%�ω����D��aǩ��r]%�ͬ����D�’�5�A��e͘���%�Ϩ����D�GJ�LJF�\%���h���bͱ���%�6�Ρ�����%�ω����D��aǩ��zR�D��PΉ����d��YΉ����d��gϏ����U�%���B���b%��L͝����S�%���h���bΡ����x�YZ�P<code>A�˕��]zp��&#125;�AqJ�DyC�Pm%�͝����D��cΠ����L���yΠ��&quot;6��M̓��ʌ��&quot;�gͅ����~���bqX%�ͬ����D�&#39;�5�A��w͘���%�Ϩ����D�T]�FpN���c�%���h���bΌ����x��M̓����n���p%�&amp;�D�%���p��iͅ����F���HGc@���&amp;�ǩ���@�G��p%�&amp;�D�%�6���T�5�a�%���h��Q͓���h�</code>%���B���b%��Lͥ����p�%���h���bnYn�mJc�fPp�’��i�iXj�w��pͅ����E���q”�p��uǩ����T���y������&amp;�ǩ���H�QrN�ǩ��’���q”�5�t��S��z”�d��uϩ����D�Ov�”�A��_ǩ��’�ͬ����u��e”�E��uǩ��AsN�\��yk}[�GyC�wA]�M��y}{G�XeV�zpI�I|A��u�q$�{E%�͝����D��Sϙ����i���bϛ����$�D���yϙ����&amp;�ǩ��”6��{����ʌ��”�gͅ����<del>���bqAl�”�Lϯ����$���u��]̭����B���t%��L������B�%���h���bQaL�Ks�D�’���q”�p��uǩ����Q���p%���q˕����D�’�*�D�%�6�@&#96;A�ʌ��”�gͅ����</del>���b<code>Oe�&quot;�Lϯ����$���u��]̭����B�%���h���b``u�&#125;[u�&#125;[%�͝����D�oG�FoG�F��yR&#125;Z�����&quot;6��]����ʌ��&quot;�gͅ����~���bo[v�&quot;�Lϯ����$���H��͝��&quot;�iͅ���^�L|]�ǩ��$���x�qN�IgF�M~@���&#39;�*�D�%���h���b΂����D�&#39;�:�ǩ����h���R΂����D�&#39;�:�ǩ����o���H̓����&#39;�*�D���yFpD�ǩ��&#39;���q˕����D�&#39;�:���x���|ǩ��&#39;���q&quot;�J��~Ϩ����D�qN�IgF�]&#123;J�C</code>�D�’�:���x���������&amp;�ǩ��”6��P����ʌ��”�gͅ����<del>���bd]m�”�Lϯ����$���H��͝��”�iͅ���W�MfG�FbZ�A��pV’���q˕��Aa[�MJl�ZA�D�’���q”�p��uǩ����l���Fή����’���x��wΛ����D�’�*�D���yΛ����D�’���q”�J��</del>Ϩ����D�eZ�MJ_�[fJ�Jl�D�’���q”�5�j��Q��z”�d��uϩ����D�]v�”�A��_ǩ��’�ͬ����u��e”�E��uǩ��I|A�@pJ�ǩ����|��Rp�D�%���h���b͇����x���Pϫ����&amp;�D�%�6���&#96;��pϓ����b��t͸���%�͎����v��YϏ����y��uͱ����G��cͅ����o��m������D���uΈ����F��YΔ����\��Nǩ����u��T͝����x�%���o��|̪����w��]�����t����H�\a_�:B�I{A�G|�Gx�˕��”6�5�q���p̮��”‘�5�A��m̭��”uO�XyN�Fu�q5�a�c�l5�a�x�z5�a�{�c5�a�c�y5�a�c�p5�a�k�z5�a�k���z”Y|���z”uO�”�$���W��b”O�HeC�A</p>]]></content>
      
      
      
        <tags>
            
            <tag> TLE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>省选武汉集训 - 游寄</title>
      <link href="/2023/03/25/%E7%9C%81%E9%80%89%E6%AD%A6%E6%B1%89%E9%9B%86%E8%AE%AD-%E6%B8%B8%E5%AF%84/"/>
      <url>/2023/03/25/%E7%9C%81%E9%80%89%E6%AD%A6%E6%B1%89%E9%9B%86%E8%AE%AD-%E6%B8%B8%E5%AF%84/</url>
      
        <content type="html"><![CDATA[<h2 id="省选武汉集训-游寄"><a href="#省选武汉集训-游寄" class="headerlink" title="省选武汉集训 - 游寄"></a>省选武汉集训 - 游寄</h2><p>来源于回忆录，还在写。</p><p>From TLE-MMem. Work in progress.</p><p>[progressbar progress&#x3D;”7.06”]Progress[&#x2F;progressbar]</p><h3 id="2023-x2F-03-x2F-06-2023-x2F-03-x2F-22-10-26-0-0-第二次线下多校集训"><a href="#2023-x2F-03-x2F-06-2023-x2F-03-x2F-22-10-26-0-0-第二次线下多校集训" class="headerlink" title="2023&#x2F;03&#x2F;06~2023&#x2F;03&#x2F;22 +10~+26 [0.0. 第二次线下多校集训]"></a>2023&#x2F;03&#x2F;06~2023&#x2F;03&#x2F;22 +10~+26 [0.0. 第二次线下多校集训]</h3><h4 id="时间线：2023-x2F-03-x2F-21-26-21-30-30-59"><a href="#时间线：2023-x2F-03-x2F-21-26-21-30-30-59" class="headerlink" title="时间线：2023&#x2F;03&#x2F;21 +26 21:30~30:59"></a>时间线：2023&#x2F;03&#x2F;21 +26 21:30~30:59</h4><p>21:30，光让我们收拾收拾上楼开会。插排翻了十分钟。</p><p>22:20，终于骂完了啊……还是说那些习惯问题，听腻了。</p><p>22:30，光怎么还不走呢，没法颓了。</p><p>22:35，帮 hmy 调乘加线段树。</p><p>22:55，ymm 在群里喊我们去那屋颓。反正要通宵，去呗。告别 hmy（并给他留下了一张纸和一根笔），跑路！</p><p>23:00，决定玩狼人杀&#x2F;kk 什么都不会，杀你妈。</p><p>大爷随手画了几张身份卡，比我快多了&#x2F;kel</p><p>不如雀魂（不如写游记）。游记初版是在纸上写的，字很抽象。</p><p>第一局。啥都不会。上来就被投出去了。新手好欺负是吧！！！1</p><p>不如观战&#x2F;lb phigros是好的！</p><p>结束了，闪电战。巫师毒死了预言家，狼刀死了巫师，游戏结束。真抽象啊！</p><p>23:15，鬼鬼和 lmy 来串门了。8（10？） 人局！</p><p>23:20，加了猎人，更不会了。开场被刀死，玩你妈。鬼创我导致我写不好字了&#x2F;zk</p><p>23:28，战斗，还在继续（</p><p>23:49，终于打平一局，之前一直输输输。</p><p>23:50，怎么又起手寄啊&#x2F;zk（砸手机）（打开 phigros）</p><p>24:08，主持了一局，就是加乐子的。“今晚上……谁来着……日食请闭眼，狼人请睁眼，请闭眼，日食结束” 笑死了。</p><p>24:08，当狼啦！预言家好像死掉了。</p><p>24:19，终于赢啦！</p><p>24:20，死。</p><p>24:29，我还要主持！！！！！！</p><p>24:48，好快啊……好多局了，累了。</p><p>25:28，lmy 把扑克拿来了，可以打牌啦！</p><p>26:00，好好好，打牌打累了珂海星。回宿舍把电脑搬过来入坑星露谷。</p><p>26:10，宿舍没灯！yby 和 hmy 都睡了&#x2F;lb 摸黑拿电脑。</p><p>28:00，星露谷颓到现在（次日 4:00），先关掉了，去用洛浔电脑打东方。</p><p>28:05，东方妖妖梦三面 Easy 一遍过，但是被六面 Easy 虐死，还是菜。喵喵在星露谷。</p><p>28:40，人走差不多了，我也回宿舍了（</p><p>29:00，同 26:10，没灯，但是我开了一个，为了颓。</p><p>29:50，睡着了……？我不知道为啥会睡着。</p><h4 id="时间线：2023-x2F-03-x2F-22-26-7-00-14-50"><a href="#时间线：2023-x2F-03-x2F-22-26-7-00-14-50" class="headerlink" title="时间线：2023&#x2F;03&#x2F;22 +26 7:00~14:50"></a>时间线：2023&#x2F;03&#x2F;22 +26 7:00~14:50</h4><p>当然还是要走的。原定 7:30 出发，所以 7:00 要下去吃早饭。事实上因为醒得太早了（指没睡（？）），6:45 就已经在收拾东西准备往下走了。</p><p>酒店提供的早饭一如既往的挠餐（？）但是显然需要吃一口啊&#x2F;kk 反正也是最后一天了，不在乎了。</p><p>7:45 坐上机场大巴，至此事情还是比较正常的。9 点多到的机场（时间忘了），走一套流程下来也就到了十点。（洛浔：机房……我错了我想说的是机场）</p><p>11:05 的飞机，因此 10:25 就可以开始检票。可已经是 10:45 了仍然没有一个人走。这时候我意识到了哪里不对，然后广播：十分抱歉，由于天气原因，原定 11:05 出发的 CZxxxx 航班推迟到 16:40 出发。</p><p>（内心：寄寄寄）</p><p>后来（11:10？）喊我们去机场附近的酒店待着……感觉很不对劲。走的时候顺便看了一眼天气预报，好家伙……空气质量 500 严重污染。“空气质量 500，是因为它只有 500——洛浔” 金句制造师石锤了。</p><p>长春下泥了 wc……好像上了微博热搜。</p><p>12:20 左右进的房间，然后就开始颓颓颓。手机太烂还没 WiFi，下不了元气，只能拿 lhy 的手机颓了。之后喵喵要找我打星露谷，顺便来串个门，所以打星露谷打到 14:40。</p><p>光：14:50 在一楼大厅集合。</p><p>感觉算是比较好的结局了吧，至少没再推迟。</p><h4 id="时间线：2023-x2F-03-x2F-22-26-14-50-23-59"><a href="#时间线：2023-x2F-03-x2F-22-26-14-50-23-59" class="headerlink" title="时间线：2023&#x2F;03&#x2F;22 +26 14:50~23:59"></a>时间线：2023&#x2F;03&#x2F;22 +26 14:50~23:59</h4><p>然后再次坐大巴去机场。第一辆没赶上，第二辆就等到 15:10 了。倒是很快啊，15:20 左右（？）到的<del>机房</del>机场。路上时间甚至不够睡一觉。</p><p>广播：十分抱歉，由于天气原因，CZxxxx 航班延误，出发时间待定。</p><p>好嘛，那我来干嘛？不如睡大觉。</p><p>大概 15:40，发现了一个比较好的座位，于是打开电脑开颓。刚拽上喵喵准备开星露谷就登机了珂海星。也好，至少不用等着了。</p><p>中间见缝插针地下了个阿卡伊，终于不愁没谱可打辣！</p><p>16:10，登机并且稳定下来。尝试打开电脑，发现还有 86%，果断动效全关挂省电，发现还能续航一个小时。其实够了。</p><p>16:25，飞机准备起飞，关电脑，开摆。还有 75%。顺便往后扫了一眼喵喵，发现喵喵正在颓。</p><p>16:40~17:40，我没有这段记忆。不知道为啥睡着了&#x2F;lb 大概做了个奇怪的梦但是没记住。</p><p>17:45，醒来，看了眼时间，吓了一跳。大概可以吃饭了，所以吃饭。饭还可以，还是原来那几样。但是我真没想到吃饭给我吃社死了……我右边那人问我多大然后我发现我根本没记住……（举个例子）</p><p>18:10，吃完饭了。开始写博客。写的区间大概是 7:00~电脑没电（确信）。</p><p>18:35，进度追平！现在外面其实很好看，正好日落，能看见类似晚霞的东西。可是不靠窗，看不清也没法拍照。一大遗憾。电量剩余 43%（45 分钟）。记事本很强啊，虽然功能少但是省资源，硬是让我撑了这么久（</p><p>18:36，大概需要开始回溯了。而且机舱里很暗，费眼睛。快点写完睡大觉。喵喵还在颓，下飞机一定要问问她到底颓了多久。</p><p>18:42，19:35 到长春，……9 摄氏度？！大哥武汉真比长春冷了啊！</p><p>18:49，要降落了，不写了。回家继续写。再见喵！30%，37 分钟。</p><p>19:30 迷迷糊糊睡到现在，然后飞机触地给我震醒了。很 nb 啊，足足减速 20min 才停下来，然后放人放了 5min……</p><p>20:00 坐 lhy 车回家，lhy 说漏嘴导致我通宵颓废的事被我爸知道了&#x2F;lb</p><p>21:18 “欢迎回家，daiarineko”。终于，17 天后，我重新回到了长春。</p><p>23:18 视奸洛浔游记。“和小日记贴贴的一天开心喵，得到了小洛浔，嘿嘿。”评价是洛浔好可怕，不要和坏姐姐走得太近，不然会被砍（？）。</p><p>“一只极速狂飙（猫猫），一只tetr.io（日记），一只东方（ymm）。”很荣幸给洛浔推了 tetr 喵，以及我现在的成绩是 sub37，还是太菜了。</p><p>以及这次集训我被拉入坑了另外两个游戏，以及喵喵的星露谷 &#x2F;se</p><p>23:20 洛浔：“日记明天去吗”，怎么可能不去。地生傻逼科，不需要 90 天，只需要给我 9 天，我随随便便给你考个 0+0。</p><p>23:25 然后又去看了喵喵的游记。都写得很详细啊，可是为什么提日记（无论作为外号还是实际的日记）啊，我不理解，发怒！“一行人出去吃饭”（指第一天），喵喵怎么忘了是谁啊，你看我到现在还记得！</p><p>23:28 被我爸骂了，意识到现在在家，不能熬夜了 &#x2F;kel 睡觉。明天见。</p><h4 id="0-0-第二次线下多校集训-终章"><a href="#0-0-第二次线下多校集训-终章" class="headerlink" title="[0.0. 第二次线下多校集训] 终章"></a>[0.0. 第二次线下多校集训] 终章</h4><p>为期 17 天的集训，不算长也不算短。与上一次夭折的集训相比，这次的体验无疑是十分完整的。15 号的团建（？）活动、21 号的狂欢夜（？）与每一天的颓废和发癫时光，都是无比快乐的。</p><p>但时间总是在流逝的，一切也终将迎来终结。过去的已经过去，能够留给我们的或许是美好的回忆，或许是深刻的教训。无论如何，我将经历写在此处，若干年之后重新来看，必然能有更多的体会。现在的我，不会、也无法客观地对这次集训进行任何评判。</p><p>那么，集训结束了。明天，又是一个新的开始：临近省选的校内集训。</p>]]></content>
      
      
      
        <tags>
            
            <tag> TLE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记可爱</title>
      <link href="/2023/03/25/%E6%97%A5%E8%AE%B0%E5%8F%AF%E7%88%B1/"/>
      <url>/2023/03/25/%E6%97%A5%E8%AE%B0%E5%8F%AF%E7%88%B1/</url>
      
        <content type="html"><![CDATA[<h1 id="日记可爱"><a href="#日记可爱" class="headerlink" title="日记可爱"></a>日记可爱</h1><h2 id="日记可爱！"><a href="#日记可爱！" class="headerlink" title="日记可爱！"></a>日记可爱！</h2><h3 id="日记可爱！！"><a href="#日记可爱！！" class="headerlink" title="日记可爱！！"></a>日记可爱！！</h3><h4 id="日记是飞舞！！！日记可爱！！！"><a href="#日记是飞舞！！！日记可爱！！！" class="headerlink" title="日记是飞舞！！！日记可爱！！！"></a><del>日记是飞舞！！！</del>日记可爱！！！</h4><h5 id="日记可爱！！！！"><a href="#日记可爱！！！！" class="headerlink" title="日记可爱！！！！"></a>日记可爱！！！！</h5><h6 id="日记可爱！！！！！"><a href="#日记可爱！！！！！" class="headerlink" title="日记可爱！！！！！"></a>日记可爱！！！！！</h6>]]></content>
      
      
      
        <tags>
            
            <tag> 发癫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/03/24/hello-world/"/>
      <url>/2023/03/24/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Deploy-and-run-server"><a href="#Deploy-and-run-server" class="headerlink" title="Deploy and run server"></a>Deploy and run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./_deploy.sh &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h2 id="Some-Test"><a href="#Some-Test" class="headerlink" title="Some Test"></a>Some Test</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;badge badge-primary&quot;</span>&gt;</span></span>默认标签<span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span> <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;badge badge-primary&quot;</span>&gt;</span></span>靛蓝标签<span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span> <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;badge badge-success&quot;</span>&gt;</span></span>绿色标签<span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span> <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;badge badge-danger&quot;</span>&gt;</span></span>红色标签<span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span> <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;badge badge-info&quot;</span>&gt;</span></span>蓝色标签<span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span> <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;badge badge-warning&quot;</span>&gt;</span></span>橙色标签<span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;badge badge-primary badge-pill&quot;</span>&gt;</span></span>靛蓝标签<span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span> <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;badge badge-success badge-pill&quot;</span>&gt;</span></span>绿色标签<span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span> <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;badge badge-danger badge-pill&quot;</span>&gt;</span></span>红色标签<span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span> <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;badge badge-info badge-pill&quot;</span>&gt;</span></span>蓝色标签<span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span> <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;badge badge-warning badge-pill&quot;</span>&gt;</span></span>橙色标签<span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dnprogress-wrapper&quot;</span>&gt;</span></span></span><br><span class="line"><span class="code">    &lt;div class=&quot;dnprogress-info&quot;&gt;</span></span><br><span class="line"><span class="code">        &lt;div class=&quot;dnprogress-label&quot;&gt;&lt;span&gt;进度条&lt;/span&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="code">        &lt;div class=&quot;dnprogress-percentage&quot;&gt;&lt;span&gt;66%&lt;/span&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="code">    &lt;/div&gt;</span></span><br><span class="line"><span class="code">    &lt;div class=&quot;dnprogress&quot;&gt;</span></span><br><span class="line"><span class="code">        &lt;div class=&quot;dnprogress-bar&quot; style=&quot;width: 66%;&quot;&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="code">    &lt;/div&gt;</span></span><br><span class="line"><span class="code">&lt;/div&gt;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line">Math test $\text&#123;test&#125; a^2+b^2=c^2$</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;argon-hidden-text argon-hidden-text-blur&quot;</span> <span class="attr">title</span>=<span class="string">&quot;You know too much&quot;</span>&gt;</span></span>Test<span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><span class="badge badge-primary">默认标签</span> <span class="badge badge-primary">靛蓝标签</span> <span class="badge badge-success">绿色标签</span> <span class="badge badge-danger">红色标签</span> <span class="badge badge-info">蓝色标签</span> <span class="badge badge-warning">橙色标签</span></p><p><span class="badge badge-primary badge-pill">靛蓝标签</span> <span class="badge badge-success badge-pill">绿色标签</span> <span class="badge badge-danger badge-pill">红色标签</span> <span class="badge badge-info badge-pill">蓝色标签</span> <span class="badge badge-warning badge-pill">橙色标签</span></p><p><span class="badge badge-primary">EZ</span><span class="badge badge-success">HD</span><span class="badge badge-danger">IN</span></p><div class="dnprogress-wrapper">    <div class="dnprogress-info">        <div class="dnprogress-label"><span>Progress Bar</span></div>        <div class="dnprogress-percentage"><span>66%</span></div>    </div>    <div class="dnprogress">        <div class="dnprogress-bar" style="width: 66%;"></div>    </div></div><p>Math test $\text{test} a^2+b^2&#x3D;c^2$</p><p><span class="argon-hidden-text argon-hidden-text-blur" title="You know too much">Test</span></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
